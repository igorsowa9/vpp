<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="f433fee2-31f8-47db-bcdd-003fbacebfe5" name="Default" comment="next steps:&#10;socket/files problem&#10;&#10;make a mmemory database and export to matlab to test some learning!&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <change afterPath="$PROJECT_DIR$/data/german_load_profiles/min15/g1_sept17.csv" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/german_load_profiles/min15/g1_sept17.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/german_load_profiles/min15/g4_sept17.csv" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/german_load_profiles/min15/g4_sept17.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/german_load_profiles/min15/h0_sept17.csv" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/german_load_profiles/min15/h0_sept17.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/german_load_profiles/min15/l1_sept17.csv" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/german_load_profiles/min15/l1_sept17.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/german_load_profiles/min5/g1_sept17.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/german_load_profiles/min5/g4_sept17.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/german_load_profiles/min5/h0_sept17.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/german_load_profiles/min5/l1_sept17.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_AIEG.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_AIEG_9_97.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_AIEG_9_97_Sept17.csv" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_AIEG_9_97_Sept17.xls" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_AIESH.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_AIESH_9_13.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_AIESH_9_13_Sept17.csv" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_AIESH_9_13_Sept17.xls" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_IVEG.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_IVEG_26_27.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_IVEG_26_27_Sept17.csv" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_IVEG_26_27_Sept17.xls" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_Ores.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_Ores_15_97.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_Ores_15_97_Sept17.csv" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_Ores_15_97_Sept17.xls" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_ReW_7_25_Sept17.csv" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_ReW_7_25_Sept17.xls" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_Rew_7_25.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_Sibelgas.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_Sibelgas_21_34.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_Sibelgas_21_34_Sept17.csv" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_Sibelgas_21_34_Sept17.xls" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_Tacteo_13_80.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_Tecteo.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_Tecteo_13_80_Sept17.csv" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_Tecteo_13_80_Sept17.xls" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_keys.csv" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_keys.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/PV_testlist.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/win_offshore_ellia_877.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/wind_OffShore_Elia_877_Sept17.csv" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/wind_OffShore_Elia_877_Sept17.xls" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/wind_OnShore_Elia_158_Sept17.csv" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/wind_OnShore_Elia_158_Sept17.xls" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/wind_keys.csv" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/wind_keys.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/wind_offshore.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/wind_onshore.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/archive/wind_onshore_elia_158.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/in_use/min5/PV_AIEG_9_97.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/in_use/min5/PV_AIESH_9_13.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/in_use/min5/PV_IVEG_26_27.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/in_use/min5/PV_Ores_15_97.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/in_use/min5/PV_Rew_7_25.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/in_use/min5/PV_Sibelgas_21_34.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/in_use/min5/PV_Tacteo_13_80.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/in_use/min5/wind_offshore_elia_877.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/in_use/min5/wind_onshore_elia_158.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/pvoutput_org/min5/GfB_mbH_-_Westnetz_GmbH_29.610kW/GfB_mbH_-_Westnetz_GmbH_29.610kW_18_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/original_elia/pvoutput_org/min5/GfB_mbH_-_Westnetz_GmbH_29.610kW/GfB_mbH_-_Westnetz_GmbH_29.610kW_19_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Freakycat_20.100kW/Freakycat_20.100kW_01_07_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Freakycat_20.100kW/Freakycat_20.100kW_18_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Freakycat_20.100kW/Freakycat_20.100kW_19_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Freakycat_20.100kW/Freakycat_20.100kW_20180618_20180624.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Freakycat_20.100kW/Freakycat_20.100kW_20_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Freakycat_20.100kW/Freakycat_20.100kW_21_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Freakycat_20.100kW/Freakycat_20.100kW_22_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Freakycat_20.100kW/Freakycat_20.100kW_23_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Freakycat_20.100kW/Freakycat_20.100kW_24_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Freakycat_20.100kW/Freakycat_20.100kW_25_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Freakycat_20.100kW/Freakycat_20.100kW_26_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Freakycat_20.100kW/Freakycat_20.100kW_27_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Freakycat_20.100kW/Freakycat_20.100kW_28_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Freakycat_20.100kW/Freakycat_20.100kW_29_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Freakycat_20.100kW/Freakycat_20.100kW_30_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/GfB_mbH_-_Westnetz_GmbH_29.610kW/GfB_mbH_-_Westnetz_GmbH_29.610kW_01_07_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/GfB_mbH_-_Westnetz_GmbH_29.610kW/GfB_mbH_-_Westnetz_GmbH_29.610kW_18_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/GfB_mbH_-_Westnetz_GmbH_29.610kW/GfB_mbH_-_Westnetz_GmbH_29.610kW_19_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/GfB_mbH_-_Westnetz_GmbH_29.610kW/GfB_mbH_-_Westnetz_GmbH_29.610kW_20180618_20180619.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/GfB_mbH_-_Westnetz_GmbH_29.610kW/GfB_mbH_-_Westnetz_GmbH_29.610kW_20180618_20180624.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/GfB_mbH_-_Westnetz_GmbH_29.610kW/GfB_mbH_-_Westnetz_GmbH_29.610kW_20_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/GfB_mbH_-_Westnetz_GmbH_29.610kW/GfB_mbH_-_Westnetz_GmbH_29.610kW_21_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/GfB_mbH_-_Westnetz_GmbH_29.610kW/GfB_mbH_-_Westnetz_GmbH_29.610kW_22_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/GfB_mbH_-_Westnetz_GmbH_29.610kW/GfB_mbH_-_Westnetz_GmbH_29.610kW_23_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/GfB_mbH_-_Westnetz_GmbH_29.610kW/GfB_mbH_-_Westnetz_GmbH_29.610kW_24_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/GfB_mbH_-_Westnetz_GmbH_29.610kW/GfB_mbH_-_Westnetz_GmbH_29.610kW_25_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/GfB_mbH_-_Westnetz_GmbH_29.610kW/GfB_mbH_-_Westnetz_GmbH_29.610kW_26_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/GfB_mbH_-_Westnetz_GmbH_29.610kW/GfB_mbH_-_Westnetz_GmbH_29.610kW_27_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/GfB_mbH_-_Westnetz_GmbH_29.610kW/GfB_mbH_-_Westnetz_GmbH_29.610kW_28_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/GfB_mbH_-_Westnetz_GmbH_29.610kW/GfB_mbH_-_Westnetz_GmbH_29.610kW_29_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/GfB_mbH_-_Westnetz_GmbH_29.610kW/GfB_mbH_-_Westnetz_GmbH_29.610kW_30_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/HLB_Sunnyfarm_19.500kW/HLB_Sunnyfarm_19.500kW_01_07_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/HLB_Sunnyfarm_19.500kW/HLB_Sunnyfarm_19.500kW_18_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/HLB_Sunnyfarm_19.500kW/HLB_Sunnyfarm_19.500kW_19_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/HLB_Sunnyfarm_19.500kW/HLB_Sunnyfarm_19.500kW_20180618_20180624.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/HLB_Sunnyfarm_19.500kW/HLB_Sunnyfarm_19.500kW_20_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/HLB_Sunnyfarm_19.500kW/HLB_Sunnyfarm_19.500kW_21_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/HLB_Sunnyfarm_19.500kW/HLB_Sunnyfarm_19.500kW_22_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/HLB_Sunnyfarm_19.500kW/HLB_Sunnyfarm_19.500kW_23_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/HLB_Sunnyfarm_19.500kW/HLB_Sunnyfarm_19.500kW_24_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/HLB_Sunnyfarm_19.500kW/HLB_Sunnyfarm_19.500kW_25_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/HLB_Sunnyfarm_19.500kW/HLB_Sunnyfarm_19.500kW_26_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/HLB_Sunnyfarm_19.500kW/HLB_Sunnyfarm_19.500kW_27_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/HLB_Sunnyfarm_19.500kW/HLB_Sunnyfarm_19.500kW_28_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/HLB_Sunnyfarm_19.500kW/HLB_Sunnyfarm_19.500kW_29_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/HLB_Sunnyfarm_19.500kW/HLB_Sunnyfarm_19.500kW_30_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Michiels_Wegberg_27.900kW/Michiels_Wegberg_27.900kW_01_07_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Michiels_Wegberg_27.900kW/Michiels_Wegberg_27.900kW_18_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Michiels_Wegberg_27.900kW/Michiels_Wegberg_27.900kW_19_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Michiels_Wegberg_27.900kW/Michiels_Wegberg_27.900kW_20180618_20180624.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Michiels_Wegberg_27.900kW/Michiels_Wegberg_27.900kW_20_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Michiels_Wegberg_27.900kW/Michiels_Wegberg_27.900kW_21_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Michiels_Wegberg_27.900kW/Michiels_Wegberg_27.900kW_22_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Michiels_Wegberg_27.900kW/Michiels_Wegberg_27.900kW_23_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Michiels_Wegberg_27.900kW/Michiels_Wegberg_27.900kW_24_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Michiels_Wegberg_27.900kW/Michiels_Wegberg_27.900kW_25_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Michiels_Wegberg_27.900kW/Michiels_Wegberg_27.900kW_26_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Michiels_Wegberg_27.900kW/Michiels_Wegberg_27.900kW_27_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Michiels_Wegberg_27.900kW/Michiels_Wegberg_27.900kW_28_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Michiels_Wegberg_27.900kW/Michiels_Wegberg_27.900kW_29_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/Michiels_Wegberg_27.900kW/Michiels_Wegberg_27.900kW_30_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/PV-Anlage_dahoam_23.000kW/PV-Anlage_dahoam_23.000kW_01_07_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/PV-Anlage_dahoam_23.000kW/PV-Anlage_dahoam_23.000kW_18_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/PV-Anlage_dahoam_23.000kW/PV-Anlage_dahoam_23.000kW_19_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/PV-Anlage_dahoam_23.000kW/PV-Anlage_dahoam_23.000kW_20180618_20180624.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/PV-Anlage_dahoam_23.000kW/PV-Anlage_dahoam_23.000kW_20_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/PV-Anlage_dahoam_23.000kW/PV-Anlage_dahoam_23.000kW_21_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/PV-Anlage_dahoam_23.000kW/PV-Anlage_dahoam_23.000kW_22_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/PV-Anlage_dahoam_23.000kW/PV-Anlage_dahoam_23.000kW_23_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/PV-Anlage_dahoam_23.000kW/PV-Anlage_dahoam_23.000kW_24_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/PV-Anlage_dahoam_23.000kW/PV-Anlage_dahoam_23.000kW_25_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/PV-Anlage_dahoam_23.000kW/PV-Anlage_dahoam_23.000kW_26_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/PV-Anlage_dahoam_23.000kW/PV-Anlage_dahoam_23.000kW_27_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/PV-Anlage_dahoam_23.000kW/PV-Anlage_dahoam_23.000kW_28_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/PV-Anlage_dahoam_23.000kW/PV-Anlage_dahoam_23.000kW_29_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/PV-Anlage_dahoam_23.000kW/PV-Anlage_dahoam_23.000kW_30_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/SGjuk_12KW_29.000kW/SGjuk_12KW_29.000kW_01_07_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/SGjuk_12KW_29.000kW/SGjuk_12KW_29.000kW_18_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/SGjuk_12KW_29.000kW/SGjuk_12KW_29.000kW_19_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/SGjuk_12KW_29.000kW/SGjuk_12KW_29.000kW_20180618_20180624.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/SGjuk_12KW_29.000kW/SGjuk_12KW_29.000kW_20_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/SGjuk_12KW_29.000kW/SGjuk_12KW_29.000kW_21_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/SGjuk_12KW_29.000kW/SGjuk_12KW_29.000kW_22_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/SGjuk_12KW_29.000kW/SGjuk_12KW_29.000kW_23_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/SGjuk_12KW_29.000kW/SGjuk_12KW_29.000kW_24_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/SGjuk_12KW_29.000kW/SGjuk_12KW_29.000kW_25_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/SGjuk_12KW_29.000kW/SGjuk_12KW_29.000kW_26_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/SGjuk_12KW_29.000kW/SGjuk_12KW_29.000kW_27_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/SGjuk_12KW_29.000kW/SGjuk_12KW_29.000kW_28_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/SGjuk_12KW_29.000kW/SGjuk_12KW_29.000kW_29_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/SGjuk_12KW_29.000kW/SGjuk_12KW_29.000kW_30_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/WohnhausA1_20.240kW/WohnhausA1_20.240kW_01_07_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/WohnhausA1_20.240kW/WohnhausA1_20.240kW_18_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/WohnhausA1_20.240kW/WohnhausA1_20.240kW_19_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/WohnhausA1_20.240kW/WohnhausA1_20.240kW_20180618_20180624.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/WohnhausA1_20.240kW/WohnhausA1_20.240kW_20_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/WohnhausA1_20.240kW/WohnhausA1_20.240kW_21_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/WohnhausA1_20.240kW/WohnhausA1_20.240kW_22_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/WohnhausA1_20.240kW/WohnhausA1_20.240kW_23_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/WohnhausA1_20.240kW/WohnhausA1_20.240kW_24_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/WohnhausA1_20.240kW/WohnhausA1_20.240kW_25_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/WohnhausA1_20.240kW/WohnhausA1_20.240kW_26_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/WohnhausA1_20.240kW/WohnhausA1_20.240kW_27_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/WohnhausA1_20.240kW/WohnhausA1_20.240kW_28_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/WohnhausA1_20.240kW/WohnhausA1_20.240kW_29_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/WohnhausA1_20.240kW/WohnhausA1_20.240kW_30_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/race|result_92.750kW/race|result_92.750kW_01_07_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/race|result_92.750kW/race|result_92.750kW_18_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/race|result_92.750kW/race|result_92.750kW_19_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/race|result_92.750kW/race|result_92.750kW_20180618_20180624.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/race|result_92.750kW/race|result_92.750kW_20_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/race|result_92.750kW/race|result_92.750kW_21_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/race|result_92.750kW/race|result_92.750kW_22_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/race|result_92.750kW/race|result_92.750kW_23_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/race|result_92.750kW/race|result_92.750kW_24_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/race|result_92.750kW/race|result_92.750kW_25_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/race|result_92.750kW/race|result_92.750kW_26_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/race|result_92.750kW/race|result_92.750kW_27_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/race|result_92.750kW/race|result_92.750kW_28_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/race|result_92.750kW/race|result_92.750kW_29_06_18.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/pvoutput_org/min5/race|result_92.750kW/race|result_92.750kW_30_06_18.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DockManager">
    <window id="1">
      <content type="file-editors">
        <state>
          <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
            <file pinned="false" current-in-tab="true">
              <entry file="file://$PROJECT_DIR$/vpp_ems_4bus.py">
                <provider selected="true" editor-type-id="text-editor">
                  <state relative-caret-position="231">
                    <caret line="62" selection-start-line="62" selection-end-line="62" />
                    <folding>
                      <element signature="e#0#11#0" expanded="true" />
                    </folding>
                  </state>
                </provider>
              </entry>
            </file>
            <file pinned="false" current-in-tab="false">
              <entry file="file://$PROJECT_DIR$/settings_4bus.py">
                <provider selected="true" editor-type-id="text-editor">
                  <state relative-caret-position="437">
                    <caret line="27" selection-start-line="27" selection-end-line="27" />
                    <folding>
                      <element signature="e#0#18#0" expanded="true" />
                    </folding>
                  </state>
                </provider>
              </entry>
            </file>
            <file pinned="false" current-in-tab="false">
              <entry file="file://$PROJECT_DIR$/other_agents.py">
                <provider selected="true" editor-type-id="text-editor">
                  <state relative-caret-position="3325">
                    <caret line="189" column="27" selection-start-line="189" selection-start-column="27" selection-end-line="189" selection-end-column="27" />
                    <folding>
                      <element signature="e#0#25#0" expanded="true" />
                    </folding>
                  </state>
                </provider>
              </entry>
            </file>
            <file pinned="false" current-in-tab="false">
              <entry file="file://$PROJECT_DIR$/utilities.py">
                <provider selected="true" editor-type-id="text-editor">
                  <state relative-caret-position="7011">
                    <caret line="380" column="18" selection-start-line="380" selection-start-column="18" selection-end-line="380" selection-end-column="18" />
                    <folding>
                      <element signature="e#0#27#0" expanded="true" />
                      <marker date="1533549348461" expanded="true" signature="11196:11276" ph="..." />
                      <marker date="1533549348461" expanded="true" signature="15854:15953" ph="..." />
                    </folding>
                  </state>
                </provider>
              </entry>
            </file>
            <file pinned="false" current-in-tab="false">
              <entry file="file://$PROJECT_DIR$/runML.py">
                <provider selected="true" editor-type-id="text-editor">
                  <state relative-caret-position="114">
                    <caret line="11" selection-start-line="11" selection-end-line="11" />
                  </state>
                </provider>
              </entry>
            </file>
            <file pinned="false" current-in-tab="false">
              <entry file="file://$PROJECT_DIR$/data/pvoutput_org/html_parser.py">
                <provider selected="true" editor-type-id="text-editor">
                  <state relative-caret-position="2945">
                    <caret line="166" column="4" selection-start-line="166" selection-start-column="4" selection-end-line="166" selection-end-column="4" />
                    <folding>
                      <marker date="1533558768884" expanded="true" signature="4362:4364" ph="..." />
                    </folding>
                  </state>
                </provider>
              </entry>
            </file>
            <file pinned="false" current-in-tab="false">
              <entry file="file://$PROJECT_DIR$/venv/lib/python3.6/site-packages/osbrain/proxy.py">
                <provider selected="true" editor-type-id="text-editor">
                  <state relative-caret-position="4807">
                    <caret line="262" selection-start-line="262" selection-end-line="262" />
                  </state>
                </provider>
              </entry>
            </file>
            <file pinned="false" current-in-tab="false">
              <entry file="file://$PROJECT_DIR$/venv/lib/python3.6/site-packages/zmq/sugar/socket.py">
                <provider selected="true" editor-type-id="text-editor">
                  <state relative-caret-position="703">
                    <caret line="57" selection-start-line="57" selection-end-line="57" />
                  </state>
                </provider>
              </entry>
            </file>
          </leaf>
        </state>
      </content>
    </window>
  </component>
  <component name="FUSProjectUsageTrigger">
    <session id="1762622434">
      <usages-collector id="statistics.lifecycle.project">
        <counts>
          <entry key="project.closed" value="9" />
          <entry key="project.open.time.0" value="1" />
          <entry key="project.open.time.1" value="1" />
          <entry key="project.open.time.10" value="2" />
          <entry key="project.open.time.11" value="3" />
          <entry key="project.open.time.12" value="2" />
          <entry key="project.open.time.18" value="1" />
          <entry key="project.open.time.9" value="1" />
          <entry key="project.opened" value="11" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.edit">
        <counts>
          <entry key="json" value="107" />
          <entry key="py" value="12754" />
          <entry key="txt" value="500" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.edit">
        <counts>
          <entry key="JSON" value="107" />
          <entry key="PLAIN_TEXT" value="500" />
          <entry key="Python" value="12754" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.open">
        <counts>
          <entry key="json" value="26" />
          <entry key="py" value="49" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.open">
        <counts>
          <entry key="JSON" value="26" />
          <entry key="Python" value="49" />
        </counts>
      </usages-collector>
    </session>
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/data/vpp4bus/vpp1-case5.json">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="399">
              <caret line="21" column="97" selection-start-line="21" selection-start-column="97" selection-end-line="21" selection-end-column="97" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/data/vpp4bus/vpp2-case4.json">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="285">
              <caret line="15" lean-forward="true" selection-start-line="15" selection-end-line="15" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/data/vpp4bus/vpp3-case4.json">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="266">
              <caret line="14" column="21" selection-start-line="14" selection-start-column="21" selection-end-line="14" selection-end-column="21" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/data/vpp4bus/vpp4-case4.json">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="342">
              <caret line="18" column="11" selection-start-line="18" selection-start-column="11" selection-end-line="18" selection-end-column="11" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/data/vpp4bus/case5_vpp1.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="475">
              <caret line="25" column="36" selection-start-line="25" selection-start-column="36" selection-end-line="25" selection-end-column="36" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/data/vpp4bus/case4_vpp2.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="456">
              <caret line="24" column="6" selection-start-line="24" selection-start-column="6" selection-end-line="24" selection-end-column="6" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/data/vpp4bus/case4_vpp3.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="817">
              <caret line="43" column="22" selection-start-line="43" selection-start-column="22" selection-end-line="43" selection-end-column="22" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/data/vpp4bus/case4_vpp4.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="722">
              <caret line="38" column="40" selection-start-line="38" selection-start-column="40" selection-end-line="38" selection-end-column="40" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Setup Script" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>opfe3prin</find>
      <find>opf1_save_balcost_all</find>
      <find>opfe3_save_costs_all</find>
      <find>genmod</find>
      <find>opfe3_save_costs_all-1</find>
      <find>opfe3_save</find>
      <find>opf1_save_balcost</find>
      <find>save_opf3</find>
      <find>opfe3_save_costs_all-</find>
      <find>objf_inclbidsrevenue</find>
      <find>save_opf1_history</find>
      <find>save_opfe3_history(global_time, 2, 123.45345)</find>
      <find>runopf_e3</find>
      <find>save_opf1</find>
      <find>save_opf</find>
      <find>opfd3</find>
      <find>opfe3</find>
      <find>save_opfe3_history</find>
      <find>generators constraints fr</find>
      <find>modify_from</find>
      <find>show_results_history</find>
      <find>green_sources</find>
      <find>modify</find>
      <find>load_data</find>
      <find>osbrain</find>
      <find>connect</find>
      <find>inproc</find>
      <find>price_curves_dict for this iteration</find>
      <find>price_curve_handler</find>
      <find>price_curve_handle</find>
    </findStrings>
    <replaceStrings>
      <replace>30</replace>
    </replaceStrings>
  </component>
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="-" />
      </list>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="SET_USER_NAME_GLOBALLY" value="false" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/data/vpp2.json" />
        <option value="$PROJECT_DIR$/data/vpp1.json" />
        <option value="$PROJECT_DIR$/data/vpp4.json" />
        <option value="$PROJECT_DIR$/ext_agents.py" />
        <option value="$PROJECT_DIR$/matpow_cases/case4gs_vpp.m" />
        <option value="$PROJECT_DIR$/matpow_cases/case5_vpp.m" />
        <option value="$PROJECT_DIR$/case4gs_vpp.py" />
        <option value="$PROJECT_DIR$/basictest.py" />
        <option value="$PROJECT_DIR$/rundcopf_noprint.py" />
        <option value="$PROJECT_DIR$/runopf_noprint.py" />
        <option value="$PROJECT_DIR$/settings.py" />
        <option value="$PROJECT_DIR$/data/vpp1-case5.json" />
        <option value="$PROJECT_DIR$/data/vpp2-case5.json" />
        <option value="$PROJECT_DIR$/data/vpp3-case5.json" />
        <option value="$PROJECT_DIR$/data/vpp4-case5.json" />
        <option value="$PROJECT_DIR$/data_build.py" />
        <option value="$PROJECT_DIR$/vpps_only_v05.py" />
        <option value="$PROJECT_DIR$/basictest2.py" />
        <option value="$PROJECT_DIR$/archive/example_oct2py.py" />
        <option value="$PROJECT_DIR$/rundcpf_noprint.py" />
        <option value="$PROJECT_DIR$/runpf_noprint.py" />
        <option value="$PROJECT_DIR$/pypower_mod/__init__.py" />
        <option value="$PROJECT_DIR$/case4_vpp.py" />
        <option value="$PROJECT_DIR$/case5_vpp.py" />
        <option value="$PROJECT_DIR$/vpps_only_3busML.py" />
        <option value="$PROJECT_DIR$/data/original_elia/in_use/PV_ReW_7_25.json" />
        <option value="$PROJECT_DIR$/data/vpp3bus/vpp4-case4.json" />
        <option value="$PROJECT_DIR$/data/vpp3bus/vpp3-case4.json" />
        <option value="$PROJECT_DIR$/data/vpp3bus/vpp2-case4.json" />
        <option value="$PROJECT_DIR$/data/vpp3bus/vpp1-case5.json" />
        <option value="$PROJECT_DIR$/data/vpp4bus/__init__.py" />
        <option value="$PROJECT_DIR$/settings_3busML.py" />
        <option value="$PROJECT_DIR$/html_parser.py" />
        <option value="$PROJECT_DIR$/data/original_elia/pvoutput_org/min5/login_page.py" />
        <option value="$PROJECT_DIR$/data/original_elia/in_use/mod_json.py" />
        <option value="$PROJECT_DIR$/data/original_elia/pvoutput_org/html_parser.py" />
        <option value="$PROJECT_DIR$/data/german_load_profiles/mod_json.py" />
        <option value="$PROJECT_DIR$/runML.py" />
        <option value="$PROJECT_DIR$/data/vpp4bus/vpp1-case5.json" />
        <option value="$PROJECT_DIR$/data/vpp4bus/case4_vpp2.py" />
        <option value="$PROJECT_DIR$/data/vpp4bus/case4_vpp3.py" />
        <option value="$PROJECT_DIR$/utilities.py" />
        <option value="$PROJECT_DIR$/data/vpp4bus/case4_vpp4.py" />
        <option value="$PROJECT_DIR$/data/vpp4bus/vpp4-case4.json" />
        <option value="$PROJECT_DIR$/data/pvoutput_org/html_parser.py" />
        <option value="$PROJECT_DIR$/data/vpp4bus/case5_vpp1.py" />
        <option value="$PROJECT_DIR$/other_agents.py" />
        <option value="$PROJECT_DIR$/settings_4bus.py" />
        <option value="$PROJECT_DIR$/data/vpp4bus/vpp2-case4.json" />
        <option value="$PROJECT_DIR$/data/vpp4bus/vpp3-case4.json" />
        <option value="$PROJECT_DIR$/vpp_ems_4bus.py" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="37" />
    <option name="y" value="-27" />
    <option name="width" value="1849" />
    <option name="height" value="1076" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="vpp" type="b2602c69:ProjectViewProjectNode" />
              <item name="vpp" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="vpp" type="b2602c69:ProjectViewProjectNode" />
              <item name="vpp" type="462c0819:PsiDirectoryNode" />
              <item name="data" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope">
        <subPane subId="Project Files">
          <expand>
            <path>
              <item name="Root" type="cbb8eebc:String" user="Root" />
              <item name="vpp" type="cbb8eebc:String" user="vpp" />
            </path>
            <path>
              <item name="Root" type="cbb8eebc:String" user="Root" />
              <item name="vpp" type="cbb8eebc:String" user="vpp" />
              <item name="data" type="cbb8eebc:String" user="data" />
            </path>
            <path>
              <item name="Root" type="cbb8eebc:String" user="Root" />
              <item name="vpp" type="cbb8eebc:String" user="vpp" />
              <item name="data" type="cbb8eebc:String" user="data" />
              <item name="original_elia" type="cbb8eebc:String" user="original_elia" />
            </path>
            <path>
              <item name="Root" type="cbb8eebc:String" user="Root" />
              <item name="vpp" type="cbb8eebc:String" user="vpp" />
              <item name="data" type="cbb8eebc:String" user="data" />
              <item name="original_elia" type="cbb8eebc:String" user="original_elia" />
              <item name="in_use" type="cbb8eebc:String" user="in_use" />
            </path>
            <path>
              <item name="Root" type="cbb8eebc:String" user="Root" />
              <item name="venv" type="cbb8eebc:String" user="venv" />
            </path>
            <path>
              <item name="Root" type="cbb8eebc:String" user="Root" />
              <item name="venv" type="cbb8eebc:String" user="venv" />
              <item name="lib" type="cbb8eebc:String" user="lib" />
            </path>
            <path>
              <item name="Root" type="cbb8eebc:String" user="Root" />
              <item name="venv" type="cbb8eebc:String" user="venv" />
              <item name="lib" type="cbb8eebc:String" user="lib" />
              <item name="python3.6" type="cbb8eebc:String" user="python3.6" />
            </path>
            <path>
              <item name="Root" type="cbb8eebc:String" user="Root" />
              <item name="venv" type="cbb8eebc:String" user="venv" />
              <item name="lib" type="cbb8eebc:String" user="lib" />
              <item name="python3.6" type="cbb8eebc:String" user="python3.6" />
              <item name="site-packages" type="cbb8eebc:String" user="site-packages" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatOrder0" value="0" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatOrder1" value="1" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatOrder2" value="2" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatOrder3" value="3" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatWidth0" value="456" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatWidth1" value="456" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatWidth2" value="457" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatWidth3" value="456" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeOrder0" value="0" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeOrder1" value="1" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeOrder2" value="2" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeOrder3" value="3" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeWidth0" value="456" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeWidth1" value="456" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeWidth2" value="457" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeWidth3" value="456" />
    <property name="SearchEverywhereHistoryKey" value="setting&#9;ACTION&#9;WelcomeScreen.Settings&#10;settin&#9;ACTION&#9;ShowSettings&#10;sett&#9;ACTION&#9;WelcomeScreen.Settings&#10;settings&#9;ACTION&#9;WelcomeScreen.Settings&#10;setti&#9;ACTION&#9;ShowSettings&#10;import library&#9;null&#9;null" />
    <property name="com.intellij.ide.scratch.LRUPopupBuilder$2/Languages" value="Python" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../git_trialsites" />
    <property name="settings.editor.selected.configurable" value="com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/data" />
      <recent name="$PROJECT_DIR$/data/original_elia/archive" />
      <recent name="$PROJECT_DIR$/data/german_load_profiles/min15" />
      <recent name="$PROJECT_DIR$/data/original_elia/pvoutput_org" />
      <recent name="$PROJECT_DIR$/archive" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/data/german_load_profiles" />
      <recent name="$PROJECT_DIR$/archive" />
      <recent name="$PROJECT_DIR$/data/vpp4bus" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/data/vpp3bus" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Python.vpps_only_3busML">
    <configuration name="html_parser" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="vpp" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/data/pvoutput_org" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/data/pvoutput_org/html_parser.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="mod_json (1)" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="vpp" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/data/german_load_profiles" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/data/german_load_profiles/mod_json.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="runML" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="vpp" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/runML.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="settings_4bus" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="vpp" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/settings_4bus.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="vpps_only_3busML" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="vpp" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/vpp_ems_4bus.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="tests" factoryName="Unittests">
      <module name="vpp" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;.&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Python.vpps_only_3busML" />
      <item itemvalue="Python.mod_json (1)" />
      <item itemvalue="Python.runML" />
      <item itemvalue="Python.settings_4bus" />
      <item itemvalue="Python.html_parser" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python.vpps_only_3busML" />
        <item itemvalue="Python.html_parser" />
        <item itemvalue="Python.runML" />
        <item itemvalue="Python.settings_4bus" />
        <item itemvalue="Python.mod_json (1)" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f433fee2-31f8-47db-bcdd-003fbacebfe5" name="Default" comment="" />
      <created>1498654725175</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1498654725175</updated>
    </task>
    <task id="LOCAL-00011" summary="next step:&#10;&#10;finish basic scenario with no internal opf:&#10; - see the bid offer handler as error says - might be that the vpp name/idx of sender/receive is missing when pushing between the agents.&#10;&#10;make other scenarios,&#10;where the ML?">
      <created>1523632275892</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1523632275892</updated>
    </task>
    <task id="LOCAL-00012" summary="next steps:&#10;&#10;finish time 2 scenario with no secondary opf:&#10;fix the showing deals at the end&#10;make secondary opf&#10;make other scenarios&#10;ML data and implementation, where, what.">
      <created>1523892785842</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1523892785842</updated>
    </task>
    <task id="LOCAL-00013" summary="next steps:&#10;&#10;finish time 2 scenario with no secondary opf:&#10;fix the showing deals at the end&#10;make secondary opf&#10;make other scenarios&#10;ML data and implementation, where, what.&#10;&#10;DATA in JSON uploaded - plan and import to OPF, pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...">
      <created>1524160297676</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1524160297676</updated>
    </task>
    <task id="LOCAL-00014" summary="next steps:&#10;&#10;finish time 2 scenario with no secondary opf:&#10;fix the showing deals at the end&#10;make secondary opf&#10;make other scenarios&#10;ML data and implementation, where, what.&#10;&#10;DATA in JSON uploaded - plan and import to OPF, pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10;&#10;solve printing of the upper constraint problem !!!!!!!!!!!!!!!">
      <created>1524338704989</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1524338704989</updated>
    </task>
    <task id="LOCAL-00015" summary="next steps:&#10;&#10;finish time 2 scenario with no secondary opf:&#10;- fix the showing deals at the end&#10;- make secondary opf&#10;- make other scenarios&#10;make &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.&#10;&#10;DATA in JSON uploaded - plan and import to OPF, pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...">
      <created>1524498409900</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1524498409900</updated>
    </task>
    <task id="LOCAL-00016" summary="next steps:&#10;&#10;finish time 2 scenario with no secondary opf:&#10;- fix the showing deals at the end&#10;- make secondary opf&#10;- make other scenarios&#10;- integrate batteries&#10;- &#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1524670984570</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1524670984570</updated>
    </task>
    <task id="LOCAL-00017" summary="next steps:&#10;&#10;finish time 2 scenario with no secondary opf:&#10;- fix the showing deals at the end&#10;- make secondary opf&#10;- make other scenarios&#10;- integrate batteries&#10;- &#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1524838120431</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1524838120431</updated>
    </task>
    <task id="LOCAL-00018" summary="next steps:&#10;&#10;finish time 2 scenario with no secondary opf:&#10;- fix the showing deals at the end&#10;- make secondary opf&#10;- make other scenarios&#10;- integrate batteries&#10;- &#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1524839774379</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1524839774379</updated>
    </task>
    <task id="LOCAL-00019" summary="next steps:&#10;&#10;normal negotiation:&#10;- finish proportional modification of the bids in 3 bus for ML case&#10;- define where opfs are necessary&#10;- integrate batteries&#10;- ...&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1525275389630</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1525275389630</updated>
    </task>
    <task id="LOCAL-00020" summary="next steps:&#10;&#10;normal negotiation:&#10;- define where more opfs are necessary&#10;- integrate batteries&#10;- where in the details of the negotiation, some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1525354846219</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1525354846219</updated>
    </task>
    <task id="LOCAL-00021" summary="next steps:&#10;&#10;normal negotiation:&#10;- define where more opfs are necessary&#10;- integrate batteries&#10;- where in the details of the negotiation, some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1525684136965</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1525684136965</updated>
    </task>
    <task id="LOCAL-00022" summary="next steps:&#10;&#10;normal negotiation:&#10;- build other block from the chart&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1525789797127</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1525789797127</updated>
    </task>
    <task id="LOCAL-00023" summary="next steps:&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1525950556523</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1525950556523</updated>
    </task>
    <task id="LOCAL-00024" summary="next steps:&#10;&#10;fix the cost comparison (in order to sell to DSO, the power needs to be produced too !!!!)&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1525967031972</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1525967031972</updated>
    </task>
    <task id="LOCAL-00025" summary="next steps:&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1526309375046</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1526309375046</updated>
    </task>
    <task id="LOCAL-00026" summary="next steps:&#10;&#10;opf_d2 should return such bids so that the agents sends also refuse messages to the excess vpp that gave price curves&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1526311701282</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1526311701282</updated>
    </task>
    <task id="LOCAL-00027" summary="next steps:&#10;&#10;opf_d2 should return such bids so that the agents sends also refuse messages to the excess vpp that gave price curves&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1526313695653</created>
      <option name="number" value="00027" />
      <option name="presentableId" value="LOCAL-00027" />
      <option name="project" value="LOCAL" />
      <updated>1526313695653</updated>
    </task>
    <task id="LOCAL-00028" summary="next steps:&#10;&#10;checking feasibility of selling green to DSO or/and execess to other VPPs&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1526400249990</created>
      <option name="number" value="00028" />
      <option name="presentableId" value="LOCAL-00028" />
      <option name="project" value="LOCAL" />
      <updated>1526400249990</updated>
    </task>
    <task id="LOCAL-00029" summary="next steps:&#10;&#10;finish checking feasibility of exporting green excess to DSO and excess to other VPPs.&#10;This should also flexibely modify the price curves - at least the power that could be exported - important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1526570655534</created>
      <option name="number" value="00029" />
      <option name="presentableId" value="LOCAL-00029" />
      <option name="project" value="LOCAL" />
      <updated>1526570655534</updated>
    </task>
    <task id="LOCAL-00030" summary="next steps:&#10;&#10;finish checking feasibility of exporting green excess to DSO and excess to other VPPs.&#10;This should also flexibely modify the price curves - at least the power that could be exported - important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1526647792793</created>
      <option name="number" value="00030" />
      <option name="presentableId" value="LOCAL-00030" />
      <option name="project" value="LOCAL" />
      <updated>1526647792793</updated>
    </task>
    <task id="LOCAL-00031" summary="next steps:&#10;&#10;finish checking feasibility of exporting green excess to DSO and excess to other VPPs.&#10;This should also flexibely modify the price curves - at least the power that could be exported - important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1527178301489</created>
      <option name="number" value="00031" />
      <option name="presentableId" value="LOCAL-00031" />
      <option name="project" value="LOCAL" />
      <updated>1527178301489</updated>
    </task>
    <task id="LOCAL-00032" summary="next steps:&#10;&#10;finish checking feasibility of exporting green excess to DSO and excess to other VPPs.&#10;This should also flexibely modify the price curves - at least the power that could be exported - important to develop such scenario!!'&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1527254893365</created>
      <option name="number" value="00032" />
      <option name="presentableId" value="LOCAL-00032" />
      <option name="project" value="LOCAL" />
      <updated>1527254893365</updated>
    </task>
    <task id="LOCAL-00033" summary="next steps:&#10;&#10;finish checking feasibility of exporting green excess to DSO and excess to other VPPs.&#10;This should also flexibely modify the price curves - at least the power that could be exported - important to develop such scenario!!'&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1527259273856</created>
      <option name="number" value="00033" />
      <option name="presentableId" value="LOCAL-00033" />
      <option name="project" value="LOCAL" />
      <updated>1527259273856</updated>
    </task>
    <task id="LOCAL-00034" summary="next steps:&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;!!! thermal limits were removed!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1528215101568</created>
      <option name="number" value="00034" />
      <option name="presentableId" value="LOCAL-00034" />
      <option name="project" value="LOCAL" />
      <updated>1528215101568</updated>
    </task>
    <task id="LOCAL-00035" summary="next steps:&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;!!! thermal limits were removed!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1528272032282</created>
      <option name="number" value="00035" />
      <option name="presentableId" value="LOCAL-00035" />
      <option name="project" value="LOCAL" />
      <updated>1528272032282</updated>
    </task>
    <task id="LOCAL-00036" summary="next steps:&#10;&#10;DEBUG&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;!!! thermal limits were removed!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1528306329595</created>
      <option name="number" value="00036" />
      <option name="presentableId" value="LOCAL-00036" />
      <option name="project" value="LOCAL" />
      <updated>1528306329595</updated>
    </task>
    <task id="LOCAL-00037" summary="next steps:&#10;&#10;DEBUG&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;!!! thermal limits were removed!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1528307997425</created>
      <option name="number" value="00037" />
      <option name="presentableId" value="LOCAL-00037" />
      <option name="project" value="LOCAL" />
      <updated>1528307997425</updated>
    </task>
    <task id="LOCAL-00038" summary="next steps:&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;!!! thermal limits were removed!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1528389032983</created>
      <option name="number" value="00038" />
      <option name="presentableId" value="LOCAL-00038" />
      <option name="project" value="LOCAL" />
      <updated>1528389032983</updated>
    </task>
    <task id="LOCAL-00039" summary="next steps:&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;!!! thermal limits were removed!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1528736377014</created>
      <option name="number" value="00039" />
      <option name="presentableId" value="LOCAL-00039" />
      <option name="project" value="LOCAL" />
      <updated>1528736377014</updated>
    </task>
    <task id="LOCAL-00040" summary="next steps:&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;!!! thermal limits were removed!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1528810968048</created>
      <option name="number" value="00040" />
      <option name="presentableId" value="LOCAL-00040" />
      <option name="project" value="LOCAL" />
      <updated>1528810968048</updated>
    </task>
    <task id="LOCAL-00041" summary="next steps:&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;!!! thermal limits were removed!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1528812368995</created>
      <option name="number" value="00041" />
      <option name="presentableId" value="LOCAL-00041" />
      <option name="project" value="LOCAL" />
      <updated>1528812368998</updated>
    </task>
    <task id="LOCAL-00042" summary="next steps:&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;!!! thermal limits were removed!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1529677066573</created>
      <option name="number" value="00042" />
      <option name="presentableId" value="LOCAL-00042" />
      <option name="project" value="LOCAL" />
      <updated>1529677066573</updated>
    </task>
    <task id="LOCAL-00043" summary="next steps:&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;!!! thermal limits were removed!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1530111568651</created>
      <option name="number" value="00043" />
      <option name="presentableId" value="LOCAL-00043" />
      <option name="project" value="LOCAL" />
      <updated>1530111568651</updated>
    </task>
    <task id="LOCAL-00044" summary="next steps:&#10;&#10;deficita agents should recoll previous PC in case of modified bids! see the chart!&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;!!! thermal limits were removed!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1530201589502</created>
      <option name="number" value="00044" />
      <option name="presentableId" value="LOCAL-00044" />
      <option name="project" value="LOCAL" />
      <updated>1530201589502</updated>
    </task>
    <task id="LOCAL-00045" summary="next steps:&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1530283439752</created>
      <option name="number" value="00045" />
      <option name="presentableId" value="LOCAL-00045" />
      <option name="project" value="LOCAL" />
      <updated>1530283439752</updated>
    </task>
    <task id="LOCAL-00046" summary="next steps:&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1530517961082</created>
      <option name="number" value="00046" />
      <option name="presentableId" value="LOCAL-00046" />
      <option name="project" value="LOCAL" />
      <updated>1530517961082</updated>
    </task>
    <task id="LOCAL-00047" summary="next steps:&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1530636030372</created>
      <option name="number" value="00047" />
      <option name="presentableId" value="LOCAL-00047" />
      <option name="project" value="LOCAL" />
      <updated>1530636030372</updated>
    </task>
    <task id="LOCAL-00048" summary="next steps:&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1531238346150</created>
      <option name="number" value="00048" />
      <option name="presentableId" value="LOCAL-00048" />
      <option name="project" value="LOCAL" />
      <updated>1531238346150</updated>
    </task>
    <task id="LOCAL-00049" summary="next steps:&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1532444265891</created>
      <option name="number" value="00049" />
      <option name="presentableId" value="LOCAL-00049" />
      <option name="project" value="LOCAL" />
      <updated>1532444265891</updated>
    </task>
    <task id="LOCAL-00050" summary="next steps:&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1532602947660</created>
      <option name="number" value="00050" />
      <option name="presentableId" value="LOCAL-00050" />
      <option name="project" value="LOCAL" />
      <updated>1532602947661</updated>
    </task>
    <task id="LOCAL-00051" summary="next steps:&#10;&#10;Poprawi¢ wykres pierwszy o load and generation total. Nie może być taki sam cały czas i jeszcze niedokładnie!!!&#10;!!!!!!!!!!!!!!!!!!!!&#10;!!!!!!!!!!!!!!!!!!!!&#10;!!!!!!!!!!!!!!!!!!!!&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1532702503189</created>
      <option name="number" value="00051" />
      <option name="presentableId" value="LOCAL-00051" />
      <option name="project" value="LOCAL" />
      <updated>1532702503190</updated>
    </task>
    <task id="LOCAL-00052" summary="next steps:&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1532705146110</created>
      <option name="number" value="00052" />
      <option name="presentableId" value="LOCAL-00052" />
      <option name="project" value="LOCAL" />
      <updated>1532705146111</updated>
    </task>
    <task id="LOCAL-00053" summary="next steps:&#10;&#10;step 100, fix the basic negotiation and run saving to memory similarieties, learning etc.&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1532963063486</created>
      <option name="number" value="00053" />
      <option name="presentableId" value="LOCAL-00053" />
      <option name="project" value="LOCAL" />
      <updated>1532963063487</updated>
    </task>
    <task id="LOCAL-00054" summary="next steps:&#10;&#10;continue with memorising and then similarities, choosing proper records etc.&#10;&#10;step 120&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1533052990261</created>
      <option name="number" value="00054" />
      <option name="presentableId" value="LOCAL-00054" />
      <option name="project" value="LOCAL" />
      <updated>1533052990261</updated>
    </task>
    <task id="LOCAL-00055" summary="next steps:&#10;&#10;make a mmemory database and export to matlab to test some learning!&#10;&#10;step 120&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1533140179810</created>
      <option name="number" value="00055" />
      <option name="presentableId" value="LOCAL-00055" />
      <option name="project" value="LOCAL" />
      <updated>1533140179811</updated>
    </task>
    <task id="LOCAL-00056" summary="next steps:&#10;&#10;make a mmemory database and export to matlab to test some learning!&#10;&#10;step 120&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1533221907340</created>
      <option name="number" value="00056" />
      <option name="presentableId" value="LOCAL-00056" />
      <option name="project" value="LOCAL" />
      <updated>1533221907341</updated>
    </task>
    <task id="LOCAL-00057" summary="next steps:&#10;&#10;check for opf1_save_balcost_all, why does not it show values in show_history()&#10;&#10;make a mmemory database and export to matlab to test some learning!&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1533308902288</created>
      <option name="number" value="00057" />
      <option name="presentableId" value="LOCAL-00057" />
      <option name="project" value="LOCAL" />
      <updated>1533308902288</updated>
    </task>
    <task id="LOCAL-00058" summary="next steps:&#10;&#10;check for opf1_save_balcost_all, why does not it show values in show_history()&#10;&#10;make a mmemory database and export to matlab to test some learning!&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1533560864593</created>
      <option name="number" value="00058" />
      <option name="presentableId" value="LOCAL-00058" />
      <option name="project" value="LOCAL" />
      <updated>1533560864594</updated>
    </task>
    <task id="LOCAL-00059" summary="next steps:&#10;socket/files problem&#10;&#10;make a mmemory database and export to matlab to test some learning!&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.">
      <created>1533631298906</created>
      <option name="number" value="00059" />
      <option name="presentableId" value="LOCAL-00059" />
      <option name="project" value="LOCAL" />
      <updated>1533631298906</updated>
    </task>
    <option name="localTasksCounter" value="60" />
    <servers />
  </component>
  <component name="TestHistory">
    <history-entry file="Unittests_in_test_ml_py - 2017.07.19 at 14h 42m 13s.xml">
      <configuration name="Unittests in test_ml.py" configurationId="tests" />
    </history-entry>
    <history-entry file="Unittests_in_test_ml_py - 2017.07.19 at 14h 42m 44s.xml">
      <configuration name="Unittests in test_ml.py" configurationId="tests" />
    </history-entry>
    <history-entry file="Unittests_in_test_ml_py - 2017.07.19 at 14h 43m 01s.xml">
      <configuration name="Unittests in test_ml.py" configurationId="tests" />
    </history-entry>
    <history-entry file="Unittests_in_test_ml_py - 2017.07.19 at 14h 43m 12s.xml">
      <configuration name="Unittests in test_ml.py" configurationId="tests" />
    </history-entry>
    <history-entry file="Unittests_in_test_ml_py - 2017.07.19 at 14h 43m 17s.xml">
      <configuration name="Unittests in test_ml.py" configurationId="tests" />
    </history-entry>
    <history-entry file="Unittests_in_test_ml_py - 2017.07.19 at 14h 44m 11s.xml">
      <configuration name="Unittests in test_ml.py" configurationId="tests" />
    </history-entry>
    <history-entry file="Unittests_in_test_ml_py - 2017.07.19 at 14h 44m 38s.xml">
      <configuration name="Unittests in test_ml.py" configurationId="tests" />
    </history-entry>
    <history-entry file="Unittests_in_test_py - 2017.07.19 at 14h 45m 37s.xml">
      <configuration name="Unittests in test.py" configurationId="tests" />
    </history-entry>
    <history-entry file="Unittests_in_test_py - 2017.07.19 at 14h 45m 57s.xml">
      <configuration name="Unittests in test.py" configurationId="tests" />
    </history-entry>
    <history-entry file="Unittests_in_test_py - 2017.07.19 at 14h 45m 58s.xml">
      <configuration name="Unittests in test.py" configurationId="tests" />
    </history-entry>
  </component>
  <component name="ToolWindowManager">
    <frame x="68" y="-11" width="1853" height="1092" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info active="true" content_ui="combo" id="Project" order="0" visible="true" weight="0.18271334" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Favorites" order="2" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" weight="0.32889345" />
      <window_info anchor="bottom" id="Run" order="2" sideWeight="0.49972987" weight="0.73849374" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.39856556" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Event Log" order="7" sideWeight="0.5002701" side_tool="true" weight="0.7038934" />
      <window_info anchor="bottom" id="Python Console" order="8" weight="0.32889345" />
      <window_info anchor="bottom" id="Terminal" order="9" weight="0.32960325" />
      <window_info anchor="bottom" id="Version Control" order="10" weight="0.32889345" />
      <window_info anchor="right" id="Commander" order="0" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Data View" order="3" />
    </layout>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="RECENTLY_FILTERED_USER_GROUPS">
                <collection />
              </option>
              <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
                <collection />
              </option>
              <option name="COLUMN_ORDER">
                <list>
                  <option value="0" />
                  <option value="1" />
                  <option value="2" />
                  <option value="3" />
                </list>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <ignored-roots>
      <path value="$PROJECT_DIR$/Notebooks/MachineLearningWithPython" />
    </ignored-roots>
    <MESSAGE value="next steps:&#10;&#10;finish time 2 scenario with no secondary opf:&#10;fix the showing deals at the end&#10;make secondary opf&#10;make other scenarios&#10;ML data and implementation, where, what.&#10;&#10;DATA in JSON uploaded - plan and import to OPF, pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs..." />
    <MESSAGE value="next steps:&#10;&#10;finish time 2 scenario with no secondary opf:&#10;fix the showing deals at the end&#10;make secondary opf&#10;make other scenarios&#10;ML data and implementation, where, what.&#10;&#10;DATA in JSON uploaded - plan and import to OPF, pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10;&#10;solve printing of the upper constraint problem !!!!!!!!!!!!!!!" />
    <MESSAGE value="next steps:&#10;&#10;finish time 2 scenario with no secondary opf:&#10;- fix the showing deals at the end&#10;- make secondary opf&#10;- make other scenarios&#10;make &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation.&#10;&#10;DATA in JSON uploaded - plan and import to OPF, pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs..." />
    <MESSAGE value="next steps:&#10;&#10;finish time 2 scenario with no secondary opf:&#10;- fix the showing deals at the end&#10;- make secondary opf&#10;- make other scenarios&#10;- integrate batteries&#10;- &#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;&#10;normal negotiation:&#10;- finish proportional modification of the bids in 3 bus for ML case&#10;- define where opfs are necessary&#10;- integrate batteries&#10;- ...&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;&#10;normal negotiation:&#10;- define where more opfs are necessary&#10;- integrate batteries&#10;- where in the details of the negotiation, some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;&#10;normal negotiation:&#10;- build other block from the chart&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;&#10;fix the cost comparison (in order to sell to DSO, the power needs to be produced too !!!!)&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;&#10;opf_d2 should return such bids so that the agents sends also refuse messages to the excess vpp that gave price curves&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;&#10;checking feasibility of selling green to DSO or/and execess to other VPPs&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;&#10;finish checking feasibility of exporting green excess to DSO and excess to other VPPs.&#10;This should also flexibely modify the price curves - at least the power that could be exported - important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;&#10;finish checking feasibility of exporting green excess to DSO and excess to other VPPs.&#10;This should also flexibely modify the price curves - at least the power that could be exported - important to develop such scenario!!'&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;!!! thermal limits were removed!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;&#10;DEBUG&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;!!! thermal limits were removed!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;!!! thermal limits were removed!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;&#10;deficita agents should recoll previous PC in case of modified bids! see the chart!&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;!!! thermal limits were removed!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;&#10;Poprawi¢ wykres pierwszy o load and generation total. Nie może być taki sam cały czas i jeszcze niedokładnie!!!&#10;!!!!!!!!!!!!!!!!!!!!&#10;!!!!!!!!!!!!!!!!!!!!&#10;!!!!!!!!!!!!!!!!!!!!&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;&#10;step 100, fix the basic negotiation and run saving to memory similarieties, learning etc.&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;&#10;continue with memorising and then similarities, choosing proper records etc.&#10;&#10;step 120&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;&#10;make a mmemory database and export to matlab to test some learning!&#10;&#10;step 120&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;&#10;check for opf1_save_balcost_all, why does not it show values in show_history()&#10;&#10;make a mmemory database and export to matlab to test some learning!&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <MESSAGE value="next steps:&#10;socket/files problem&#10;&#10;make a mmemory database and export to matlab to test some learning!&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
    <option name="LAST_COMMIT_MESSAGE" value="next steps:&#10;socket/files problem&#10;&#10;make a mmemory database and export to matlab to test some learning!&#10;&#10;situation when deficit agent receives PC with too little resources -&gt; it should break the simulation and propose better price (up to dso intervention price)&#10;&#10;situation when deficit agent refuses already accepted bid offer (because it got a new price curve from another excess agent (e.g. modified one))&#10;&#10;update 15minutes files to 5minutes ones. Put more data into code, import using the new script&#10;&#10;visualisation, more testing of different cases, more files implementation - see below&#10;&#10;Implement modifying the resources from files.&#10;Check files from Gianlu, David, Jannik, Andrea&#10;&#10;~~~ extract the feasible excess as the price curve for further evaluation !!!!!! important to develop such scenario!!&#10;&#10;normal negotiation:&#10;- build other blocks from the chart&#10;- develop the iterations &gt; 1, in different moments,&#10;- integrate batteries&#10;- where in the details of the negotiation (opfs/decisions/evaluation/alignments), some ML might me used:&#10;   + initial requests by Defs&#10;   + initial price curves by Exc&#10;   + alignment of the accept-mod (need behaviour of Def as answer)&#10;&#10;Pursue towards the pure ML derivation i.e. prediction of adjacent power balances to propose better negotiations? - with no agents, only pure ML on an isolated system case and opfs...&#10; &#10;ML data and implementation, where, what:&#10;1) basic table with simple time data and PC and bids, and ML estimation of success&#10;2) estimation generator by generator, resource by resource in order to make a real opf output estimation." />
  </component>
  <component name="editorHistoryManager">
    <entry file="file:///usr/lib/python3.6/json/decoder.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="147">
          <caret line="341" selection-start-line="341" selection-end-line="341" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/german_load_profiles/min15/g1_sept17.csv">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="266">
          <caret line="14" column="6" lean-forward="true" selection-start-line="14" selection-start-column="6" selection-end-line="14" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/original_elia/PV_AIEG_9_97_Sept17.csv" />
    <entry file="file://$PROJECT_DIR$/data/original_elia/wind_onshore.json" />
    <entry file="file://$PROJECT_DIR$/data/original_elia/PV_AIESH.json" />
    <entry file="file://$PROJECT_DIR$/data/original_elia/wind_keys.json" />
    <entry file="file://$PROJECT_DIR$/data/original_elia/wind_offshore.json" />
    <entry file="file://$PROJECT_DIR$/data/original_elia/wind_OffShore_Elia_877_Sept17.csv" />
    <entry file="file://$PROJECT_DIR$/data/original_elia/wind_OnShore_Elia_158_Sept17.csv" />
    <entry file="file://$PROJECT_DIR$/data/original_elia/PV_Tecteo_13_80_Sept17.csv" />
    <entry file="file://$PROJECT_DIR$/data/original_elia/PV_Tecteo.json" />
    <entry file="file://$PROJECT_DIR$/data/original_elia/PV_AIESH_9_13_Sept17.csv" />
    <entry file="file://$PROJECT_DIR$/data/vpp2-case5.json" />
    <entry file="file://$PROJECT_DIR$/data/vpp4bus/__init__.py">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/data/vpp0-case5.json" />
    <entry file="file://$PROJECT_DIR$/data/vpp1-case5.json" />
    <entry file="file://$PROJECT_DIR$/README.md">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/archive/settings.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="190">
          <caret line="12" column="44" selection-start-line="12" selection-start-column="44" selection-end-line="12" selection-end-column="44" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/archive/vpp4-case4.json">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/data_build.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="513">
          <caret line="27" column="34" selection-start-line="27" selection-start-column="34" selection-end-line="27" selection-end-column="34" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/original_elia/pvoutput_org/min5/GfB_mbH_-_Westnetz_GmbH_29.610kW_29_06_18" />
    <entry file="file://$PROJECT_DIR$/data/original_elia/in_use/PV_ReW_7_25.json" />
    <entry file="file://$PROJECT_DIR$/data/original_elia/in_use/PV_AIESH_9_13.json" />
    <entry file="file://$PROJECT_DIR$/data/original_elia/pvoutput_org/min5/GfB_mbH_-_Westnetz_GmbH_29.610kW_29_06_18.json" />
    <entry file="file://$PROJECT_DIR$/data/pvoutput_org/login_page.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="116">
          <caret line="7" selection-start-line="7" selection-end-line="21" selection-end-column="46" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/german_load_profiles/min15/g1_sept17.json">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/data/original_elia/archive/PV_AIEG_9_97.json">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/data/original_elia/archive/PV_Tacteo_13_80.json">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/data/german_load_profiles/mod_json.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="364">
          <caret line="39" lean-forward="true" selection-start-line="39" selection-end-line="39" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/venv/lib/python3.6/site-packages/matplotlib/axes/_subplots.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="158">
          <caret line="66" selection-start-line="66" selection-end-line="66" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/venv/lib/python3.6/site-packages/matplotlib/figure.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="158">
          <caret line="1238" selection-start-line="1238" selection-end-line="1238" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/original_elia/in_use/mod_json.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="162">
          <caret line="58" lean-forward="true" selection-start-line="58" selection-end-line="58" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/__init__.py">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/pypower_mod/runopf_noprint.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="76">
          <caret line="4" column="30" selection-start-line="4" selection-start-column="30" selection-end-line="4" selection-end-column="30" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/vpp4bus/vpp1-case5.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="399">
          <caret line="21" column="97" selection-start-line="21" selection-start-column="97" selection-end-line="21" selection-end-column="97" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/vpp4bus/vpp3-case4.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="266">
          <caret line="14" column="21" selection-start-line="14" selection-start-column="21" selection-end-line="14" selection-end-column="21" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/vpp4bus/vpp4-case4.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="342">
          <caret line="18" column="11" selection-start-line="18" selection-start-column="11" selection-end-line="18" selection-end-column="11" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/vpp4bus/case5_vpp1.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="475">
          <caret line="25" column="36" selection-start-line="25" selection-start-column="36" selection-end-line="25" selection-end-column="36" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/vpp4bus/case4_vpp2.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="456">
          <caret line="24" column="6" selection-start-line="24" selection-start-column="6" selection-end-line="24" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/vpp4bus/case4_vpp3.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="817">
          <caret line="43" column="22" selection-start-line="43" selection-start-column="22" selection-end-line="43" selection-end-column="22" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/vpp4bus/case4_vpp4.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="722">
          <caret line="38" column="40" selection-start-line="38" selection-start-column="40" selection-end-line="38" selection-end-column="40" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/vpp_ems_4bus.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="231">
          <caret line="62" selection-start-line="62" selection-end-line="62" />
          <folding>
            <element signature="e#0#11#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/settings_4bus.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="437">
          <caret line="27" selection-start-line="27" selection-end-line="27" />
          <folding>
            <element signature="e#0#18#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/other_agents.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="3325">
          <caret line="189" column="27" selection-start-line="189" selection-start-column="27" selection-end-line="189" selection-end-column="27" />
          <folding>
            <element signature="e#0#25#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/utilities.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="7011">
          <caret line="380" column="18" selection-start-line="380" selection-start-column="18" selection-end-line="380" selection-end-column="18" />
          <folding>
            <element signature="e#0#27#0" expanded="true" />
            <marker date="1533549348461" expanded="true" signature="11196:11276" ph="..." />
            <marker date="1533549348461" expanded="true" signature="15854:15953" ph="..." />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/runML.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="114">
          <caret line="11" selection-start-line="11" selection-end-line="11" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/pvoutput_org/html_parser.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="2945">
          <caret line="166" column="4" selection-start-line="166" selection-start-column="4" selection-end-line="166" selection-end-column="4" />
          <folding>
            <marker date="1533558768884" expanded="true" signature="4362:4364" ph="..." />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/venv/lib/python3.6/site-packages/osbrain/proxy.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="4807">
          <caret line="262" selection-start-line="262" selection-end-line="262" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/venv/lib/python3.6/site-packages/zmq/sugar/socket.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="703">
          <caret line="57" selection-start-line="57" selection-end-line="57" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/data/german_load_profiles/min5/g1_sept17.json">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/data/vpp4bus/vpp2-case4.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="285">
          <caret line="15" lean-forward="true" selection-start-line="15" selection-end-line="15" />
        </state>
      </provider>
    </entry>
  </component>
</project>